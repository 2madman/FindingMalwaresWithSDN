from scapy.layers.inet import IP
from scapy.layers.inet import TCP
from scapy.all import *
import threading


interface = None
found = False

def exPtr(packet):
    if TCP in packet and (packet[TCP].dport == 445 or packet[TCP].dport == 139):
        payload = bytes(packet[TCP].payload)

        # Search for the Bitcoin address string in the payload
        bitcoin_address = "1Mz7153HMuxXTuR2R1t78mGSdzaAtNbBWX"
        if bitcoin_address in payload:
            print("ExPetr ransomware detected!")
            found = True
            
    if TCP in packet and packet[TCP].dport == 80:
        payload = bytes(packet[TCP].payload)

        propfind_string = b"PROPFIND ladmin$"
        if propfind_string in payload:
            print("ExPetr ransomware detected!")
            found = True

    if TCP in packet and (packet[TCP].dport == 445 or packet[TCP].dport == 139):
        print("ExPetr ransomware detected!")


def exPtrHandler():
    # Create thread objects for each function
    sniff(iface=interface, prn=exPtr, count=1500)
    if found == False:
        print("ExPetr ransomware not detected.")

    return found


"""
def printDetectingExPetr():
    while True:
        print("Detecting ExPetr ransomware.")
        if(found):
            break
        time.sleep(2)

t = threading.Thread(target=printDetectingExPetr)
t.daemon = True
t.start()
"""
exPtrHandler()