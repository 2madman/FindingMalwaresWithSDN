'''
import findMalware
import common_patterns
import fiveToEight
import analyzePackets
import output

found = False
found2 = False
found3 = False
found4 = False 

def MalwareHandler():
    found = output.detect()
    if(found):
        return True
    found2 = findMalware.findMalware()
    if(found2):
        return True
    found3 = common_patterns.commonPattFunc()
    if(found3):
        return True
    found4 = fiveToEight.start_monitoring()
    if(found4):
        return True
    found5 = analyzePackets.run_monitoring()
    if(found5):
        return True
    return False
'''

import threading
import findMalware
import common_patterns
import fiveToEight
import analyzePackets
import output

found = False

# Define the function to run each malware detection function and set the found variable
def run_output_detect():
    global found
    if output.detect():
        found = True

def run_find_malware():
    global found
    if findMalware.findMalware():
        found = True

def run_common_patterns():
    global found
    if common_patterns.commonPattFunc():
        found = True

def run_five_to_eight():
    global found
    if fiveToEight.start_monitoring():
        found = True

def run_analyze_packets():
    global found
    if analyzePackets.run_monitoring():
        found = True

def MalwareHandler():
    global found

    # Create threads for each function
    threads = [
        threading.Thread(target=run_output_detect),
        threading.Thread(target=run_find_malware),
        threading.Thread(target=run_common_patterns),
        threading.Thread(target=run_five_to_eight),
        threading.Thread(target=run_analyze_packets)
    ]

    # Start all threads
    for thread in threads:
        thread.start()

    # Wait for all threads to complete
    for thread in threads:
        thread.join()

    return found
